#BlueJ class context
comment0.target=TestTicketKiosk2
comment0.text=\n\ Describe\ TestTicketKiosk2\ here.\n\n\ @author\ Joel\ Swanson\n\ @version\ 03.09.2014\n
comment1.params=
comment1.target=void\ checkReadOneFlight001()
comment1.text=\n\ Check\ readOneFlight\ method.\n
comment10.params=
comment10.target=void\ checkReadOneFlightA()
comment10.text=\n\ Perform\ a\ check\ of\ readOneFlight\ with\ the\ first\ data\ set.\n
comment11.params=
comment11.target=void\ checkReadOneFlightB()
comment11.text=\n\ Perform\ a\ check\ of\ readOneFlight\ with\ the\ second\ data\ set.\n
comment12.params=
comment12.target=java.lang.String[]\ getExpectedA()
comment12.text=\n\ Return\ the\ correct\ output\ from\ the\ sample\ data.\n\ \n\ Customer\ Name\:\ Al\ Bundy\n\ Customer\ ssn\ \:\ 222-22-2222\n\ Flight\ Number\:\ 885\n\ Customer\ Name\:\ Peg\ Bundy\n\ Customer\ ssn\ \:\ 111-11-1111\n\ Flight\ Number\:\ 100\n\ Extra\ enter\ for\ error\ pause\n\ Customer\ Name\ \:\ exit\n\ \n\ @return\ The\ expected\ output\ of\ the\ given\ test\ data\n\ in\ array\ format.\n
comment13.params=strings
comment13.target=java.lang.String\ stringArrayToString(java.lang.String[])
comment13.text=\n\ Takes\ a\ string\ array\ and\ returns\ it\ as\ one\n\ massive\ string\ with\ newlines.\n\ @param\ strings\ The\ strings\ to\ concatenate.\n\ @return\ Returns\ the\ string\ array\ as\ a\ string\ with\n\ each\ element\ separated\ by\ a\ newline.\n
comment2.params=
comment2.target=void\ checkSchedulesPrinted002()
comment2.text=\n\ Make\ sure\ exaxtly\ three\ schedules\ are\ printed\ with\n\ the\ sample\ input.\n\ \n\ Input\n\ \ Customer\ Name\:\ Al\ Bundy\n\ \ Customer\ ssn\ \:\ 222-22-2222\n\ \ Flight\ Number\:\ 885\n\ \ Customer\ Name\:\ Peg\ Bundy\n\ \ Customer\ ssn\ \:\ 111-11-1111\n\ \ Flight\ Number\:\ 100\n\ \ Extra\ enter\ for\ error\ pause\n\ \ Customer\ Name\ \:\ exit\ \ \ \ \ *\ \n
comment3.params=
comment3.target=void\ checkPurchaseTicketsInitialExit003()
comment3.text=\n\ Check\ the\ purchase\ tickets\ method\ exits\ properly\n\ if\ exit\ is\ typed\ initially.\n
comment4.params=
comment4.target=void\ checkExactLines004()
comment4.text=\n\ Check\ to\ make\ sure\ the\ output\ EXACTLY\ follows\ the\ sample\ output.\n\ \n\ Input\n\ \ Customer\ Name\:\ Al\ Bundy\n\ \ Customer\ ssn\ \:\ 222-22-2222\n\ \ Flight\ Number\:\ 885\n\ \ Customer\ Name\:\ Peg\ Bundy\n\ \ Customer\ ssn\ \:\ 111-11-1111\n\ \ Flight\ Number\:\ 100\n\ \ Extra\ enter\ for\ error\ pause\n\ \ Customer\ Name\ \:\ exit\ \ \ \ \ *\ \n
comment5.params=
comment5.target=void\ checkTicketPegBundy005()
comment5.text=\n\ Change\ up\ the\ input\ a\ bit.\ \ Check\ that\ a\ Peg\ Bundy\ \n\ ticket\ exists\ in\ the\ output.\ The\ output\ should\n\ look\ exactly\ the\ same\ with\ different\ ticket\ data.\n\ \n\ Input\n\ \ Customer\ Name\:\ Peg\ Bundy\n\ \ Customer\ ssn\ \:\ 111-11-1111\n\ \ Flight\ Number\:\ 190\n\ \ Customer\ Name\:\ Al\ Bundy\n\ \ Customer\ ssn\ \:\ 222-22-2222\n\ \ Flight\ Number\:\ 200\n\ \ Extra\ enter\ for\ error\ pause\n\ \ Customer\ Name\ \:\ exit\ \ \ \ \ *\ \n
comment6.params=
comment6.target=java.lang.String[]\ getExpected002()
comment6.text=\n\ Returns\ the\ expected\ output\ of\ a\ simple\ exit.\n\ @return\ Returns\ the\ expected\ output\ in\ array\ format.\n
comment7.params=
comment7.target=void\ checkEachLine()
comment7.text=\n\ Look\ at\ each\ line\ of\ the\ output\ and\ compare\ to\ expected.\n
comment8.params=result\ expected
comment8.target=java.lang.String\ getErrorLines(java.lang.String[],\ java.lang.String[])
comment8.text=\n\ Print\ each\ line\ in\ the\ result\ as\ an\ error\ or\ not.\n\ @param\ result\ The\ result\ as\ captured\ from\ student\ output.\n\ @param\ expected\ The\ correct\ output.\ \ The\ result\ data\ \n\ should\ match\ this\ data\ exactly.\n\ @return\ The\ student\ result\ as\ a\ string\ with\ each\ error\n\ line\ marked.\n
comment9.params=testData
comment9.target=java.lang.String[]\ capture(java.lang.String)
comment9.text=\n\ Capture\ student\ output.\n\ @param\ testData\ String\ which\ will\ be\ the\ input\ data\ to\ a\ scanner.\n\ @return\ Returns\ the\ output\ of\ the\ student\ data\ as\ an\n\ array\ of\ strings.\n
numComments=14
