#BlueJ class context
comment0.target=PostlabDeclTest
comment0.text=\n\ PostlabDeclTest.java.\n\n\ This\ is\ an\ advanced\ class\ used\ to\ unit\ test\ student\ work\ for\ CS\ 1440\ Lab\ 3.\ \ \n\ Students\ are\ welcome\ to\ view\ the\ code\ as\ an\ example\ of\ "good"\ code.\ \ At\ a\ \n\ "high\ level"\ 1440\ students\ can\ understand\ that\ this\ code\ tests\ the\ code\ they\n\ are\ writing\ in\ a\ "companion"\ class.\ \ They\ can\ see\ the\ inputs\ going\ into\ a\ \n\ test\ and\ the\ results\ expected.\ \ However,\ there\ is\ much\ sophisticated\ stuff\ \n\ going\ on\ "under\ the\ hood."\ \ Students\ should\ NOT\ be\ discouraged\ if\ they\ \n\ don't\ "get"\ the\ details.\ \ \n\n\ @author\ \ Jay\ Fenwick\n\ @version\ Spring\ 2014\n
comment1.params=
comment1.target=PostlabDeclTest()
comment1.text=\n\ Default\ constructor\ for\ test\ class\ PayStubTest.\n
comment10.params=methods
comment10.target=void\ checkMain(java.lang.reflect.Method[])
comment10.text=\n\ Test\ declaration\ of\ main\ method.\n\ \n\ @param\ methods\ is\ array\ of\ all\ the\ class\ methods\n
comment11.params=constructors
comment11.target=void\ checkConstructor(java.lang.reflect.Constructor[])
comment11.text=\n\ Test\ declaration\ of\ constructor.\n\ \n\ @param\ constructors\ is\ array\ of\ all\ the\ constructors\n
comment12.params=methods
comment12.target=void\ checkSpecificMethods(java.lang.reflect.Method[])
comment12.text=\n\ Test\ declaration\ of\ specific\ methods\:\ getInput,\ calculate,\ printPayStub.\n\ \n\ @param\ methods\ is\ array\ of\ all\ the\ class\ methods\n
comment13.params=methods
comment13.target=void\ checkAccessorMethods(java.lang.reflect.Method[])
comment13.text=\n\ Test\ declaration\ of\ accessors.\n\ \n\ @param\ methods\ is\ array\ of\ all\ the\ class\ methods\n
comment14.params=methods
comment14.target=void\ checkMutatorMethods(java.lang.reflect.Method[])
comment14.text=\n\ Test\ declaration\ of\ mutators.\n\ \n\ @param\ methods\ is\ array\ of\ all\ the\ class\ methods\n
comment15.params=m\ name\ expectMods\ expectRtnType\ expectParams
comment15.target=boolean\ methodIsProper(java.lang.reflect.Method,\ java.lang.String,\ int,\ java.lang.String,\ java.lang.String[])
comment15.text=\n\ Verifies\ characteristics\ of\ a\ method.\n\ \n\ @param\ m\ is\ the\ method\ to\ check\n\ @param\ name\ is\ the\ expected\ name\ of\ the\ method\n\ @param\ expectMods\ is\ the\ expected\ modifiers\ (public,\ static,\ etc.)\n\ @param\ expectRtnType\ is\ the\ expected\ return\ type\n\ @param\ expectParams\ is\ a\ String\ array\ describing\ the\ parameters\n\ \n\ @return\ true\ if\ method\ matches\ expectations\n
comment16.params=m\ name\ expectMods\ expectParams
comment16.target=boolean\ methodIsProper(java.lang.reflect.Constructor,\ java.lang.String,\ int,\ java.lang.String[])
comment16.text=\n\ Verifies\ characteristics\ of\ a\ constructor.\n\ \n\ @param\ m\ is\ the\ constructor\ method\ to\ check\n\ @param\ name\ is\ the\ expected\ name\ of\ the\ method\n\ @param\ expectMods\ is\ the\ expected\ modifiers\ (public,\ static,\ etc.)\n\ @param\ expectParams\ is\ a\ String\ array\ describing\ the\ parameters\n\ \n\ @return\ true\ if\ method\ matches\ expectations\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\n\ Sets\ up\ the\ test\ fixture.\n\n\ Called\ before\ every\ test\ case\ method.\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\n\ Tears\ down\ the\ test\ fixture.\n\n\ Called\ after\ every\ test\ case\ method.\n
comment4.params=
comment4.target=void\ testConstantDeclarations()
comment4.text=\n\ Tests\ for\ declarations\ of\ code\ in\ postlab.\n\ \n\ Student\ should\ be\ declaring\ three\ constant\ fields\n\ Verify\ these\ properties\ exist\ as\ best\ as\ we\ can.\n
comment5.params=
comment5.target=void\ testConstants()
comment5.text=\n\ Allows\ other\ test\ classes\ to\ test\ this.\n
comment6.params=
comment6.target=void\ testFieldDeclarations()
comment6.text=\n\ Tests\ for\ declarations\ of\ code\ in\ Activity\ 2.\n\ \n\ Student\ should\ be\ declaring\ instance\ fields\ to\ hold\ input\ data.\n\ Verify\ these\ properties\ exist\ as\ best\ as\ we\ can.\n
comment7.params=
comment7.target=void\ testFields()
comment7.text=\n\ Allows\ other\ test\ classes\ to\ test\ this.\n
comment8.params=
comment8.target=void\ testMethodDeclarations()
comment8.text=\n\ Test\ the\ expected\ method\ declarations.\ \ \n\ \n\ We\ are\ interested\ in\ main,\ getInput,\ calculate,\ printPayStub.\n\ There\ should\ also\ be\ two\ accessors\ and\ two\ mutators.\ \ Complicated\n\ somewhat\ by\ not\ requiring\ specific\ names\ though.\n
comment9.params=
comment9.target=void\ testMethods()
comment9.text=\n\ Allows\ other\ test\ classes\ to\ test\ this.\n
numComments=17
