#BlueJ class context
comment0.target=Activity1MethodTest
comment0.text=\n\ The\ test\ class\ Activity1MethodTest.\n\n\ This\ is\ an\ advanced\ class\ used\ to\ unit\ test\ student\ work\ for\ CS\ 1440\ Lab\ 3.\ \ \n\ Students\ are\ welcome\ to\ view\ the\ code\ as\ an\ example\ of\ "good"\ code.\ \ At\ a\ \n\ "high\ level"\ 1440\ students\ can\ understand\ that\ this\ code\ tests\ the\ code\ they\ \n\ are\ writing\ in\ a\ "companion"\ class.\ \ They\ can\ see\ the\ inputs\ going\ into\ a\ \n\ test\ and\ the\ results\ expected.\ \ However,\ there\ is\ much\ sophisticated\ stuff\ \n\ going\ on\ "under\ the\ hood."\ \ Students\ should\ NOT\ be\ discouraged\ if\ they\ don't\ \n\ "get"\ the\ details.\ \ \n\n\ @author\ \ Jay\ Fenwick\n\ @version\ Spring\ 2014\n
comment1.params=
comment1.target=Activity1MethodTest()
comment1.text=\n\ Default\ constructor.\n
comment10.params=
comment10.target=void\ testSilent()
comment10.text=\n\ Silently\ (no\ output)\ tests\ in\ various\ ways\ the\ activity\ 1\ work.\n\ Notice\ that\ we\ can\ assign\ partial\ grades\ as\ some\ "subtests"\ work\ using\n\ the\ grade\ field.\ \ But\ we\ must\ be\ sure\ to\ printGrade\ before\ failing.\n
comment11.params=
comment11.target=void\ testSampleData()
comment11.text=\n\ Tests\ the\ sample\ data\ from\ the\ assignment\ specification.\n
comment12.params=line
comment12.target=boolean\ lineOfUnderscores(java.lang.String)
comment12.text=\n\ Check\ proper\ format\ of\ output\ consisting\ of\ a\ line\ of\ underscores.\n\ \n\ @param\ line\ is\ the\ line\ to\ check\ \n\ @return\ boolean\ value\ indicating\ success\ of\ the\ check\n
comment13.params=output\ msg\ expected
comment13.target=void\ checkLine(java.util.Scanner,\ java.lang.String,\ java.lang.String)
comment13.text=\n\ Private\ method\ to\ check\ proper\ format\ of\ output\ line.\n\ \n\ @param\ output\ Scanner\ containing\ next\ line\ to\ check\n\ @param\ msg\ is\ a\ pretty\ printing\ message\n\ @param\ expected\ is\ the\ expected\ output\n
comment14.params=outputString
comment14.target=void\ verifySampleOutput(java.lang.String)
comment14.text=\n\ Private\ method\ to\ verify\ student\ output\ when\ given\ sample\ input.\n\ \n\ @param\ outputString\ is\ the\ student\ program's\ actual\ output\n
comment15.params=
comment15.target=java.lang.String\ makeRandomAlphaString()
comment15.text=\n\ Helper\ method\ for\ making\ random\ data.\n\ \n\ @return\ a\ random\ string\n
comment16.params=len
comment16.target=java.lang.String\ makeRandomAlphaString(int)
comment16.text=\n\ Helper\ method\ for\ making\ random\ data.\n\ \n\ @param\ len\ is\ the\ desired\ length\ of\ the\ random\ string\n\ @return\ the\ random\ string\ generated\n
comment17.params=len
comment17.target=java.lang.String\ makeRandomDigitString(int)
comment17.text=\n\ Helper\ method\ for\ making\ radnom\ inputs.\n\ \n\ @param\ len\ is\ the\ length\ (in\ digits)\ of\ the\ numeric\ value\n\ @return\ a\ string\ of\ numeric\ digits\n
comment18.params=
comment18.target=void\ generateInputData()
comment18.text=\n\ Helper\ method\ to\ generate\ random\ data\ and\ store\ in\ fields.\n
comment19.params=
comment19.target=void\ testRandomData()
comment19.text=\n\ Tests\ student\ code\ using\ random\ input\ data.\n
comment2.params=
comment2.target=int\ getGrade()
comment2.text=\n\ Grade\ accessor\ to\ get\ partial\ grade.\n\ \n\ @return\ current\ grade\ accumulated\ for\ activity1\n
comment20.params=
comment20.target=java.lang.String[]\ buildExpectedOutput()
comment20.text=\n\ Helper\ method\ to\ build\ expected\ output\ from\ the\ random\ data\ fields.\n\ \n\ @return\ String\ array\ of\ expected\ output\ based\ on\ random\ data\ in\ fields\n
comment21.params=outputString
comment21.target=void\ verifyRandomOutput(java.lang.String)
comment21.text=\n\ Helper\ method\ to\ verify\ output\ is\ expected.\n\ \n\ @param\ outputString\ is\ the\ student's\ output\n
comment22.params=
comment22.target=void\ testCheckStyle()
comment22.text=\n\ Entry\ point\ for\ testing\ conformance\ to\ Checkstyle.\n
comment23.params=
comment23.target=java.lang.String\ getXmlHeaderConfig()
comment23.text=\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\n\ \n\ @return\ header\ string\ for\ XML\ file\n
comment24.params=
comment24.target=java.lang.String\ getMagicNumbersConfig()
comment24.text=\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\n\ \n\ @return\ checkstyle\ module\ definition\ for\ magic\ numbers\n
comment25.params=
comment25.target=java.lang.String\ getWhitespacecConfig()
comment25.text=\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\n\ \n\ @return\ checkstyle\ module\ definition\ for\ whitespace\ around\ operators\n
comment26.params=
comment26.target=java.lang.String\ getXmlConfig()
comment26.text=\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\n\ \n\ @return\ XML\ configuration\ string\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\n\ Tears\ down\ the\ test\ fixture.\n\ \n\ Called\ after\ every\ test\ case\ method.\n
comment4.params=
comment4.target=void\ setUp()
comment4.text=\n\ Sets\ up\ the\ test\ fixture.\n\n\ Called\ before\ every\ test\ case\ method.\ \ Sets\ up\ new\ I/O\ streams.\n\ Creates\ test\ object.\n
comment5.params=
comment5.target=void\ resetStreams()
comment5.text=\n\ Resets\ I/O\ streams.\n
comment6.params=
comment6.target=void\ testActivity1()
comment6.text=\n\ The\ "entry\ point"\ for\ testing\ activity\ 1.\n
comment7.params=
comment7.target=void\ printGrade()
comment7.text=\n\ Store\ the\ grade\ then\ print\ the\ report.\n
comment8.params=
comment8.target=java.lang.String\ gradeReport()
comment8.text=\n\ Creates\ a\ string\ with\ the\ grades\ for\ output.\n\ \n\ @return\ a\ String\ containing\ the\ grader\ report\n
comment9.params=
comment9.target=void\ testPrevious()
comment9.text=\n\ Test\ previous\ activities.\n
numComments=27
